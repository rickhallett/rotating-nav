{"version":3,"sources":["components/Circle.js","App.js","reportWebVitals.js","index.js"],"names":["Circle","active","i","className","App","logState","console","log","state","activeCircle","prevHandler","changeActiveCircle","nextHandler","getProgressWidth","circles","componentDidUpdate","disableEndOfRange","dir","saneModulus","a","b","this","setState","prevState","newActiveCircle","abs","Math","style","width","map","c","id","disabled","onClick","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAAaA,EAAS,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,EAC/B,OACE,qBAAKC,UAAS,iBAAYF,EAAS,SAAW,MAA9C,SAAuDC,KC6G5CE,E,kDA1Gb,aAAe,IAAD,8BACZ,gBAIFC,SAAW,WACTC,QAAQC,IAAI,CAAEC,MAAO,EAAKA,MAAMC,gBANpB,EASdC,YAAc,WACZ,EAAKC,oBAAoB,IAVb,EAadC,YAAc,WACZ,EAAKD,mBAAmB,IAdZ,EA6CdE,iBAAmB,WACjB,OAAQ,EAAKL,MAAMC,cAAgB,EAAKD,MAAMM,QAAU,GAAM,KA9ClD,EAiDdC,mBAAqB,WACnBT,QAAQC,IAAI,WAlDA,EAqDdS,kBAAoB,aAnDlB,EAAKR,MAAQ,CAAEC,aAAc,EAAGK,QAAS,GAF7B,E,sDAiBd,SAAmBG,GAAM,IAAD,OAChBC,EAAc,SAACC,EAAGC,GAAJ,OAAYD,EAAIC,EAAKA,GAAKA,GAE9CC,KAAKC,UACH,SAACC,GACC,IAAMC,EAAkBN,EACtBK,EAAUd,aAAeQ,EACzB,EAAKT,MAAMM,SAGbR,QAAQC,IAAI,CAAEiB,oBAEd,IAAMC,EAAMC,KAAKD,IACfP,EAAYK,EAAUd,aAAeQ,EAAK,EAAKT,MAAMM,UAKvD,OAFAR,QAAQC,IAAI,CAAEkB,QAEP,CACLhB,aAAciB,KAAKD,IACjBP,EAAYK,EAAUd,aAAeQ,EAAK,EAAKT,MAAMM,cAI3D,kBAAM,EAAKT,gB,oBAcf,WAAU,IAAD,OACP,OACE,sBAAKF,UAAU,YAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,qBACEA,UAAU,eACVwB,MAAO,CAAEC,MAAM,GAAD,OAAKP,KAAKR,mBAAV,QAEf,CAAC,EAAG,EAAG,EAAG,GAAGgB,KAAI,SAACC,EAAG5B,GACpB,OACE,cAAC,EAAD,CAEED,OAAQC,IAAM,EAAKM,MAAMC,aACzBP,EAAGA,EAAI,GAFFA,SAQb,sBAAKC,UAAU,gBAAf,UACE,wBACEA,UAAU,MACV4B,GAAG,OACHC,SAAUX,KAAKb,MAAMC,aAAe,EACpCwB,QAASZ,KAAKX,YAJhB,kBASA,wBACEP,UAAU,MACV4B,GAAG,OACHC,SAAUX,KAAKb,MAAMC,aAAe,EACpCwB,QAASZ,KAAKT,YAJhB,kBASA,wBACET,UAAU,iBACV4B,GAAG,OACHE,QAASZ,KAAKT,YAHhB,gC,GA9FQsB,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ff28877e.chunk.js","sourcesContent":["export const Circle = ({ active, i }) => {\n  return (\n    <div className={`circle ${active ? \"active\" : null}`}>{i}</div>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { Circle } from \"./components/Circle\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = { activeCircle: 0, circles: 4 };\n  }\n\n  logState = () => {\n    console.log({ state: this.state.activeCircle });\n  };\n\n  prevHandler = () => {\n    this.changeActiveCircle(-1);\n  };\n\n  nextHandler = () => {\n    this.changeActiveCircle(1);\n  };\n\n  changeActiveCircle(dir) {\n    const saneModulus = (a, b) => ((a % b) + b) % b;\n\n    this.setState(\n      (prevState) => {\n        const newActiveCircle = saneModulus(\n          prevState.activeCircle + dir,\n          this.state.circles\n        );\n\n        console.log({ newActiveCircle });\n\n        const abs = Math.abs(\n          saneModulus(prevState.activeCircle + dir, this.state.circles)\n        );\n\n        console.log({ abs });\n\n        return {\n          activeCircle: Math.abs(\n            saneModulus(prevState.activeCircle + dir, this.state.circles)\n          ),\n        };\n      },\n      () => this.logState()\n    );\n  }\n\n  getProgressWidth = () => {\n    return (this.state.activeCircle / (this.state.circles - 1)) * 100;\n  };\n\n  componentDidUpdate = () => {\n    console.log(\"update\");\n  };\n\n  disableEndOfRange = () => {};\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"progress-container\">\n          <div\n            className=\"progress-bar\"\n            style={{ width: `${this.getProgressWidth()}%` }}\n          ></div>\n          {[0, 1, 2, 3].map((c, i) => {\n            return (\n              <Circle\n                key={i}\n                active={i === this.state.activeCircle}\n                i={i + 1}\n              />\n            );\n          })}\n        </div>\n\n        <div className=\"btn-container\">\n          <button\n            className=\"btn\"\n            id=\"prev\"\n            disabled={this.state.activeCircle < 1}\n            onClick={this.prevHandler}\n          >\n            Prev\n          </button>\n\n          <button\n            className=\"btn\"\n            id=\"next\"\n            disabled={this.state.activeCircle > 2}\n            onClick={this.nextHandler}\n          >\n            Next\n          </button>\n\n          <button\n            className=\"btn btn--green\"\n            id=\"next\"\n            onClick={this.nextHandler}\n          >\n            Loop + 1\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}